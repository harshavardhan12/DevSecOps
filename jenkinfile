pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    stages {
        stage('clean workspace') {
            steps {
                cleanWs()
            }
        }
      stage('Checkout from Git') {
    steps {
        git(
            branch: 'main',
            url: 'https://github.com/harshavardhan12/DevSecOps.git'
        )
    }
}

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-scanner') {
                    sh ''' 
                    $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectKey=Netflix
                    '''
                }
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
       
    
        stage('Docker Build & Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-credentials') {
                        sh "docker build --build-arg TMDB_V3_API_KEY=6ecb888bbfab136100cbca2efd0bf7e0 -t netflix ."
                        sh "docker tag netflix harsha/netflix:latest"
                        sh "docker push harsha/netflix:latest"
                    }
                }
            }
        }
        stage('TRIVY Image Scan') {
            steps {
                sh "trivy image sirishassss/netflix:latest > trivyimage.txt"
            }
        }
        stage('Deploy to container') {
            steps {
                sh 'docker run -d -p 8081:80 harsha/netflix:latest'
            }
        }
    }
}
